<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.system.mapping.IRegionMapper" >
    <resultMap id="BaseResultMap" type="com.jh.system.entity.InitRegion">
        <id column="region_id" property="regionId" jdbcType="BIGINT" />
        <result column="data_status" property="dataStatus" jdbcType="CHAR" />
        <result column="del_flag" property="delFlag" jdbcType="CHAR" />
        <result column="create_time" property="createTime" jdbcType="DATE" />
        <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="INTEGER" />
        <result column="modify_time" property="modifyTime" jdbcType="DATE" />
        <result column="modifier_name" property="modifierName" jdbcType="VARCHAR" />
        <result column="modifier" property="modifier" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="region_code" property="regionCode" jdbcType="VARCHAR" />
        <result column="region_name" property="regionName" jdbcType="VARCHAR" />
        <result column="china_name" property="chinaName" jdbcType="VARCHAR" />
        <result column="local_name" property="localName" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="parent_id" property="parentId" jdbcType="BIGINT" />
        <result column="area" property="area" jdbcType="NUMERIC" />
        <result column="lon" property="lon" jdbcType="NUMERIC" />
        <result column="lat" property="lat" jdbcType="NUMERIC" />
        <result column="bbox" property="bbox" jdbcType="VARCHAR" />
        <result column="vertex_bbox" property="vertexBbox" jdbcType="VARCHAR" />
        <result column="strip_number" property="stripNumber" jdbcType="VARCHAR" />
        <result column="capital_id" property="capitalId" jdbcType="BIGINT" />
        <result column="centroid" property="centroid" jdbcType="VARCHAR" />
    </resultMap>

    <!--
        根据parent_id获取区域列表，如果parent_id为空，则获取level=1的国家级区域列表
        @version <1> 2018-01-18 cxj:Created.
    -->
    <select id="findRegionListByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select region_id,region_code,region_name,china_name,local_name,level,parent_id,st_astext(centroid) as centroid from init_region
        <if test="parentId==null or parentId==''">
            where del_flag = '1' and data_status = '1' and region_id = 3102000006
        </if>
        <if test="parentId!=null">
            where del_flag = '1' and data_status = '1' and parent_id=#{parentId}
        </if>
        order by region_id
    </select>

    <!--
        根据parent_id获取包含地块区域列表，如果parent_id为空，则获取level=1的国家级区域列表
    -->
    <select id="findBlockRegionListByParentId" resultMap="BaseResultMap">
        select region_id,region_code,region_name,china_name,local_name,level,parent_id,st_astext(centroid) as centroid from init_region
        where 1=1
        <if test="parentId==null or parentId==''">
            and del_flag = '1' and data_status = '1' and region_id = 3102000006
        </if>
        <if test="parentId!=null">
            and del_flag = '1' and data_status = '1' and parent_id=#{parentId}
        </if>
        <if test="level != null and level == 1">
            and region_code in (select p_region_code from mv_init_rank_region)
        </if>
        <if test="level != null and level == 2">
            and region_code in (select region_code from mv_init_rank_region)
        </if>
        order by region_id
    </select>

    <!--
    根据parent_id获取省级区域列表，如果parent_id为空，则获取level=1的国家级区域列表
    @version <1> 2018-04-17 cxw:Created.
-->
    <select id="findRegionListByParentIdForReport" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select region_id,region_code,region_name,china_name,local_name,level,parent_id from init_region
        <if test="parentId==null">
            where level=1
        </if>
        <if test="parentId!=null">
            where parent_id=#{parentId} and level=2
        </if>
    </select>

    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        region_id, data_status, del_flag, create_time, creator_name, creator, modify_time,
        modifier_name, modifier, remark, region_code, region_name, china_name, local_name,
        level, parent_id, area, lon, lat, bbox, vertex_bbox, strip_number,ST_AsText(centroid) as centroid,capital_id
    </sql>
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List" />
        from init_region
        where region_id = #{regionId,jdbcType=BIGINT}
    </select>
    <delete id="delete" parameterType="java.lang.Long" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from init_region
        where region_id = #{regionId,jdbcType=BIGINT}
    </delete>

    <insert id="save" parameterType="InitRegion" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into init_region
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="regionId != null" > region_id,</if>
            <if test="dataStatus != null" >
                data_status,
            </if>
            <if test="delFlag != null" >
                del_flag,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="creatorName != null" >
                creator_name,
            </if>
            <if test="creator != null" >
                creator,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="modifierName != null" >
                modifier_name,
            </if>
            <if test="modifier != null" >
                modifier,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="regionCode != null" >
                region_code,
            </if>
            <if test="regionName != null" >
                region_name,
            </if>
            <if test="chinaName != null" >
                china_name,
            </if>
            <if test="localName != null" >
                local_name,
            </if>
            <if test="level != null" >
                level,
            </if>
            <if test="parentId != null" >
                parent_id,
            </if>
            <if test="area != null" >
                area,
            </if>
            <if test="lon != null" >
                lon,
            </if>
            <if test="lat != null" >
                lat,
            </if>
            <if test="bbox != null" >
                bbox,
            </if>
            <if test="vertexBbox != null" >
                vertex_bbox,
            </if>
            <if test="stripNumber != null">
                strip_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="regionId != null" > #{regionId}, </if>
            <if test="dataStatus != null" >
                #{dataStatus,jdbcType=CHAR},
            </if>
            <if test="delFlag != null" >
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=DATE},
            </if>
            <if test="creatorName != null" >
                #{creatorName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null" >
                #{creator,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=DATE},
            </if>
            <if test="modifierName != null" >
                #{modifierName,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null" >
                #{modifier,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="regionCode != null" >
                #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="regionName != null" >
                #{regionName,jdbcType=VARCHAR},
            </if>
            <if test="chinaName != null" >
                #{chinaName,jdbcType=VARCHAR},
            </if>
            <if test="localName != null" >
                #{localName,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                #{level,jdbcType=BIGINT},
            </if>
            <if test="area != null" >
                #{area,jdbcType=NUMERIC},
            </if>
            <if test="lon != null" >
                #{lon,jdbcType=NUMERIC},
            </if>
            <if test="lat != null" >
                #{lat,jdbcType=NUMERIC},
            </if>
            <if test="bbox != null" >
                #{bbox,jdbcType=OTHER},
            </if>
            <if test="vertexBbox != null" >
                #{vertexBbox,jdbcType=OTHER},
            </if>
            <if test="stripNumber != null">
                #{stripNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="InitRegion" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update init_region
        <set >
            <if test="dataStatus != null" >
                data_status = #{dataStatus,jdbcType=CHAR},
            </if>
            <if test="delFlag != null" >
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="creatorName != null" >
                creator_name = #{creatorName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null" >
                creator = #{creator,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=DATE},
            </if>
            <if test="modifierName != null" >
                modifier_name = #{modifierName,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null" >
                modifier = #{modifier,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="regionCode != null" >
                region_code = #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="regionName != null" >
                region_name = #{regionName,jdbcType=VARCHAR},
            </if>
            <if test="chinaName != null" >
                china_name = #{chinaName,jdbcType=VARCHAR},
            </if>
            <if test="localName != null" >
                local_name = #{localName,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                level = #{level,jdbcType=BIGINT},
            </if>
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="area != null" >
                area = #{area,jdbcType=NUMERIC},
            </if>
            <if test="lon != null" >
                lon = #{lon,jdbcType=NUMERIC},
            </if>
            <if test="lat != null" >
                lat = #{lat,jdbcType=NUMERIC},
            </if>
            <if test="bbox != null" >
                bbox = #{bbox,jdbcType=OTHER},
            </if>
            <if test="vertexBbox != null" >
                vertex_bbox = #{vertexBbox,jdbcType=OTHER},
            </if>
            <if test="stripNumber != null" >
                strip_number = #{stripNumber,jdbcType=VARCHAR},
            </if>
        </set>
        where region_id = #{regionId,jdbcType=BIGINT}
    </update>

    <!--
        查询所有顶级区域数据
        @version <1> 2018/1/31 djh： Created.
     -->
    <select id="findFirstLevelInitRegionList" resultType="RegionTreeReturn" >
      select  region_id id,(case when china_name is null then region_name else china_name end) as name,local_name, region_code as regionCode, parent_id pId, level "regionLevel"
        from  init_region
        where del_flag = '1' and level = 1  and  parent_id is  null
        order by region_id asc
    </select>

    <!--
        根据父ID查询子节点
        @version <1> 2018/1/31 djh： Created.
     -->
    <select id="querySubInitRegionListByParentId" resultType="RegionTreeReturn" parameterType="java.lang.Long">
        select region_id id,(case when china_name is null then region_name else china_name end) as name,local_name,region_code as regionCode, parent_id pId,  level "regionLevel" from  init_region
        where  del_flag = '1' and parent_id=#{parentId}
        order by region_id asc
    </select>

    <!--
        查询指定区域编码是否存在
        @version <1> 2018-02-10 djh：Created.
     -->
    <select id="checkRegionCodeIsExists" resultType="int" parameterType="java.lang.String">
        select count(*) c from  init_region
        where  region_code = #{regionCode,jdbcType=VARCHAR}
    </select>

    <!--
        查询指定父id下子记录的最大id值
        @version <1> 2018-02-10 djh：Created.
     -->
    <select id="findMaxSubInitRegionIdByParentId" resultType="java.lang.Long" parameterType="java.lang.Long">
        select region_id from init_region where parent_id=#{parentId}
        order by region_id desc limit 1
    </select>
    <!--
             查询全部有效的区域
              @version <1> 2018-05-10 wl：Created.
           -->
    <select id="findAll" resultMap="BaseResultMap" >
        select region_id,region_code,china_name,local_name,level,parent_Id,local_name from init_region where data_status='1' and del_flag='1'
    </select>

    <!--
        查询全部有效的区域
         @version <1> 2018-05-10 wl：Created.
   -->
    <select id="findAllParentId" resultType="java.lang.Long" >
        select DISTINCT parent_id from init_region where data_status='1' and del_flag='1' and parent_id is not null
    </select>

    <!--
        根据parent_id获取区域列表，如果parent_id为空，则获取level=1的国家级区域列表
    -->
    <select id="findRegionsByParentId" resultMap="BaseResultMap">
        select region_id ,region_code ,region_name ,china_name,local_name  ,level,parent_id,capital_id  from init_region
        <if test="parentId==null">
            where level=1 and data_status = '1'
        </if>
        <if test="parentId!=null">
            where parent_id=#{parentId} and data_status = '1'
        </if>
        ORDER BY region_code ASC
    </select>

    <!--
        根据账号获取相应数据服务的所有区域
        1. 根据账号获取账号与数据服务产品的关联信息
        2. 将账号下所有数据服务产品的区域取出，并进行唯一过滤
        3. 根据区域与init_region进行左关联，获取返回值需要的字段信息
        @version <1> 2017-12-20 Hayden:Created.
        @version <2> 2018-2-1 update:1.账号数据产品关联表废除，查询权限时只查询数据产品表
    -->
    <select id="findRegionListByAccount" resultMap="BaseResultMap">
        select a1.region_id ,region_code ,region_name ,china_name,local_name  ,level,parent_id,capital_id  from
        (
        select distinct region_id from data_product a
        where a.data_status = '1' and a.account_id=#{accountId}
        ) a1 left join init_region b1 on a1.region_id=b1.region_id  ORDER BY b1.region_code ASC
    </select>

    <!--
        根据区域代码查询区域信息
        @version <1> 2017-12-22 Hayden:Created.
    -->
    <select id="findRegionByCode" resultMap="BaseResultMap">
        select region_id  ,region_code ,region_name ,china_name,local_name  ,level,parent_id,capital_id  from init_region
        where region_code=#{regionCode} limit 1
    </select>

    <!--
        根据区域ID查询区域信息
        @version <1> 2017-12-22 Hayden:Created.
    -->
    <select id="findRegionById" resultMap="BaseResultMap">
        select region_id ,region_code ,region_name ,china_name,local_name  ,level,parent_id,capital_id  from init_region
        where region_id=#{regionId}
    </select>

    <select id="findRegionByChinaName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select region_id ,region_code ,china_name,local_name  from init_region where china_name like #{chinaName}
    </select>

    <!--
        根据区域代码查询区域及区域的所有下级信息
        @version <1> 2018-8-9 wangli:Created.
    -->
    <select id="findRegionsByCode" resultType="Long">
        select region_id  from init_region
        where region_code like '%' || #{regionCode,jdbcType=VARCHAR} || '%'
    </select>


    <select id="findRegion" resultType="map" parameterType="hashMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        init_region
        WHERE 1=1
        <if test="parentId != null and parentId != ''">
            and parent_id = #{parentId,jdbcType=BIGINT}
        </if>
        <if test="bbox != null and bbox != ''">
            and ST_Intersects(ST_PolygonFromText(#{bbox},4326), bbox)
        </if>
        ORDER BY
        region_id
    </select>

    <!--查询region_code为空的列表 -->
    <select id="findNullRegionCodeList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select region_id ,region_code,region_name,china_name,local_name,parent_id  from region_world
        where level = #{level} and region_name is null
    </select>

    <!--更新region_name和region_code -->
    <update id="updateCodeById" parameterType="InitRegion" >
        update region_world
        <set >
            <if test="regionCode != null" >
                region_code = #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="regionName != null" >
                region_name = #{regionName,jdbcType=VARCHAR},
            </if>
        </set>
        where region_id = #{regionId,jdbcType=BIGINT}
    </update>

    <select id="getByRegionId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
       region_id ,region_code,region_name,china_name,local_name,parent_id
        from region_world
        where region_id = #{regionId,jdbcType=BIGINT}
    </select>

    <!--
       查询指定编码是否存在
    -->
    <select id="checkCodeIsExists" resultType="int" parameterType="java.lang.String">
        select count(*) c from  region_world
        where  region_code = #{regionCode,jdbcType=VARCHAR}
    </select>


    <!--查询所有的省级直管县或者市-->
    <select id="findMunicipalityArea" resultType="java.lang.Long">
        SELECT A
            .region_id AS regionId
        FROM
            init_region A,
            init_region b
        WHERE
            A.china_name = b.china_name
            AND A.LEVEL = 3
            AND b.LEVEL = 4 UNION ALL
        SELECT
            b.region_id AS regionId
        FROM
            init_region A,
            init_region b
        WHERE
            A.china_name = b.china_name
            AND A.LEVEL = 3
            AND b.LEVEL = 4
    </select>

    <!--查询各镇地块总数和总面积 -->
    <select id="queryRegionRankStatistics" resultType="map" parameterType="com.jh.system.model.RegionParam">
        select count(0) rankNum,sum(area) area from init_rank_xjz where data_status='1' and del_flag='1' and parent_id = #{parentId,jdbcType=BIGINT}
    </select>

    <!--查询自己级下级所属区域的id -->
    <select id="findRegionIdListByRegionCode" resultType="map" parameterType="java.lang.String">
        select region_id from init_region  where del_flag = '1' and data_status = '1' and level = 3 and region_code like '%' || #{regionCode,jdbcType=VARCHAR} || '%'
        order by region_id
    </select>

</mapper>