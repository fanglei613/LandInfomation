<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.system.mapping.IPermAccountMapper" >
    <resultMap id="BaseResultMap" type="com.jh.system.entity.PermAccount" >
        <id column="account_id" property="accountId" jdbcType="INTEGER" />
        <result column="account_name" property="accountName" jdbcType="VARCHAR" />
        <result column="account_pwd" property="accountPwd" jdbcType="VARCHAR" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="data_status" property="dataStatus" jdbcType="CHAR" />
        <result column="del_flag" property="delFlag" jdbcType="CHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="INTEGER" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="modifier_name" property="modifierName" jdbcType="VARCHAR" />
        <result column="modifier" property="modifier" jdbcType="INTEGER" />
        <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        account_id, account_name, account_pwd, nick_name, remark, data_status,del_flag,
        create_time, creator_name, creator, modify_time,modifier_name, modifier, account_code

    </sql>

    <!--
        分页获取用户账号
        @version <1> 2018-01-18 cxj:Created.
    -->
    <select id="queryPermAccountList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_perm_account
    </select>

    <!--
        根据用户账户名和密码获取用户账户信息
        @version <1> 2018-01-18 cxj:Created.
    -->
    <select id="queryPermAccount" resultMap="BaseResultMap" parameterType="PermAccount">
        select <include refid="Base_Column_List" /> from sys_perm_account
        where (account_name = #{accountName} or account_code = #{accountName}) and account_pwd = #{accountPwd}
    </select>

    <select id="checkAccountName" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />  from sys_perm_account
        where del_flag = '1' and (account_name = #{accountName} or account_code = #{accountName})
    </select>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select <include refid="Base_Column_List" />
        from sys_perm_account where  account_id = #{accountId,jdbcType=INTEGER}
    </select>

    <insert id="saveAccount" parameterType="PermAccount" useGeneratedKeys="true" keyProperty="accountId" >
        insert into sys_perm_account
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="remark != null" >
                remark,
            </if>
            create_time,
            <if test="creatorName != null" >
                creator_name,
            </if>
            <if test="creator != null" >
                creator,
            </if>
            account_name,
            account_pwd,
            <if test="nickName != null" >
                nick_name,
            </if>
            <if test="dataStatus != null" >
                data_status,
            </if>
            account_code
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            now(),
            <if test="creatorName != null" >
                #{creatorName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null" >
                #{creator,jdbcType=INTEGER},
            </if>
            #{accountName,jdbcType=VARCHAR},
            #{accountPwd,jdbcType=VARCHAR},
            <if test="nickName != null" >
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="dataStatus != null" >
                #{dataStatus,jdbcType=CHAR},
            </if>
            #{accountCode,jdbcType=VARCHAR}
        </trim>
    </insert>

    <!--
        根据用户名查找指定的用户信息
        @version <1> 2018-01-23 djh:Created.
        @version <2> 2018-07-31 zhangshen:Update. 添加账号code也能登录
    -->
    <select id="queryPermAccountByAccountName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select <include refid="Base_Column_List" /> from sys_perm_account
        where  del_flag = '1' and data_status='1'
        and (account_name = #{accountName} or account_code = #{accountCode})
    </select>


    <!--
        更新指定用户的密码
        @version <1> 2018-01-23 djh:Created.
    -->
    <update id="updatePermAccountPassword" parameterType="PermAccount">
        update sys_perm_account set account_pwd = #{accountPwd}, modify_time = now()
        where account_id = #{accountId, jdbcType=INTEGER}
    </update>

    <update id="updateServiceKeyByAccountId" parameterType="PermAccount">
        update sys_perm_account set service_token = #{serviceToken,jdbcType=VARCHAR} where account_id = #{accountId,jdbcType=INTEGER}
    </update>

    <update id="update" parameterType="PermAccount" >
        update sys_perm_account
        <set >
            modify_time = now(),
            <if test="modifierName != null" >
                modifier_name = #{modifierName,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null" >
                modifier = #{modifier,jdbcType=INTEGER},
            </if>
            <if test="accountName != null" >
              account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null" >
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="dataStatus != null" >
                data_status = #{dataStatus,jdbcType=CHAR},
            </if>
            <if test="accountCode != null" >
                account_code = #{accountCode,jdbcType=VARCHAR}
            </if>
        </set>
        where account_id = #{accountId,jdbcType=INTEGER}
    </update>






















    <insert id="saveAccount2" parameterType="PermAccount" useGeneratedKeys="true" keyProperty="accountId" >
        insert into sys_perm_account
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="remark != null" >
                remark,
            </if>
            create_time,
            data_status,
            del_flag,
            <if test="creatorName != null" >
                creator_name,
            </if>
            <if test="creator != null" >
                creator,
            </if>
            account_name,
            account_pwd,
            <if test="nickName != null" >
                nick_name,
            </if>
            <if test="serviceToken != null" >
                service_token,
            </if>
            <if test="accountType != null" >
                account_type,
            </if>
            account_code
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            now(),
            '1',
            '1',
            <if test="creatorName != null" >
                #{creatorName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null" >
                #{creator,jdbcType=INTEGER},
            </if>
            #{accountName,jdbcType=VARCHAR},
            #{accountPwd,jdbcType=VARCHAR},
            <if test="nickName != null" >
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="serviceToken != null" >
                #{serviceToken,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null" >
                #{accountType,jdbcType=INTEGER},
            </if>
            #{accountCode,jdbcType=VARCHAR}
        </trim>
    </insert>

    <select id="findAccountOne" parameterType="HashMap" resultType="HashMap">
        SELECT
--         a.account_pwd AS "accountPwd",
        a.account_id AS "accountId",
        a.account_name AS "accountName",
        a.account_code AS "accountCode",
        a.nick_name as "nickName",
        a.service_token AS "serviceKey",
        b.person_name AS "personName",
--         b.sex AS  sex,
--         b.person_born AS "personBorn",
--         b.qq AS qq,
--         b.email AS email,
--         b.mobile AS mobile,
--         b.address AS "address",
        b.person_type AS "personType",
--         b.industry AS industry,
--         b.company AS company,
        b.person_id as "personId"
--      ,cl.region_id,b.wechat_id,ir.china_name as chinaName
        FROM  sys_perm_account a LEFT JOIN sys_perm_person b
        ON a.account_id = b.account_id
--      left join custom_locale cl on cl.user_id=a.account_id and cl.region_type=2401 left join init_region ir on cl.region_id=ir.region_id
        <where>
            a.del_flag = '1' and a.data_status = '1'
            <if test="serviceKey != null">
               and a.service_token = #{serviceKey}
            </if>
            <if test="phone != null">
                AND (a.account_name = #{phone} or a.account_code = #{phone})
            </if>

        </where>
    </select>


    <!--
     * 修改指定账号的密码
     * @param loginEntity 账号
     * @version <1> 2018-05-10 cxw： Created.
    -->
    <update id="updatePwdBySms" parameterType="LoginParam">
        update sys_perm_account set account_pwd = #{accountPwd}, modify_time = now()
        where account_name = #{accountName} or account_code = #{accountName}
    </update>


    <select id="queryPermAccountAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_perm_account where data_status='1' and del_flag='1'
    </select>

</mapper>