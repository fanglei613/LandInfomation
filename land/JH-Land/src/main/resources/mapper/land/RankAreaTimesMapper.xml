<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.land.mapping.IRankAreaTimesMapper" >
    <resultMap id="BaseResultMap" type="com.jh.land.entity.RankAreaTimes" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="data_time" property="dataTime" jdbcType="TIMESTAMP" />
        <result column="region_id" property="regionId" jdbcType="BIGINT" />
        <result column="crop_id" property="cropId" jdbcType="INTEGER" />
        <result column="resolution" property="resolution" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, data_time, region_id, crop_id, resolution
    </sql>
    <insert id="addRankAreaTimes" parameterType="java.util.List" useGeneratedKeys="false">
        INSERT INTO rank_area_times(region_id,crop_id,resolution,data_time)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.regionId},
            #{item.cropId},
            #{item.resolution},
            #{item.dataTime}
            )
        </foreach>
    </insert>

    <delete id="deleteAllRankAreaTimes" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from rank_area_times where 1=1
    </delete>

    <select id="findRankAreaTimes" resultType="java.lang.String" parameterType="com.jh.land.model.RankAreaVO">
        SELECT DISTINCT(data_time) AS dataTime
        FROM
        rank_area_times
        WHERE 1=1
        <if test="regionId != null" >
            and (region_id =#{regionId,jdbcType=BIGINT} or  region_id in (select region_id from init_region where del_flag='1' and data_status='1' and region_code like CONCAT(#{regionCode,jdbcType=VARCHAR}, '%')))
        </if>
        <if test="cropId != null" >
            and  crop_id = #{cropId,jdbcType=INTEGER}
        </if>
        <!--<if test="resolution != null" >
            and  resolution = #{resolution}
        </if>-->
        <if test="startDate != null and endDate != null"  >
            and  data_time BETWEEN  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
        </if>
        order by data_time asc
    </select>



</mapper>