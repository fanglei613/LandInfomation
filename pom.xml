<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.datall.cloud</groupId>
	<artifactId>JH-Product</artifactId>
	<version>7.1</version>
	<packaging>pom</packaging>
	<modules>
		<!-- 基础组件，公用组件与业务公用组件 -->
		<module>base/JH-Common</module>
		<module>base/JH-Biz</module>

		<!-- Cloud基础服务 -->
		<module>base/JH-Server</module>
		<module>base/JH-Gateway</module>
		<module>base/JH-Map</module>

				<!-- 业务系统服务端 -->
		<module>base/JH-Sys</module>
		<module>land/JH-Land</module>

	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<jackson.version>2.8.5</jackson.version>
		<springfox>2.7.0</springfox>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
            <groupId>cn.datall.cloud</groupId>
            <artifactId>JH-Common</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- spring boot test-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Allow for automatic restarts when classpath contents change. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox}</version>
		</dependency>

		<dependency>
	      <groupId>org.postgresql</groupId>
	      <artifactId>postgresql</artifactId>
	      <scope>runtime</scope>
    	</dependency>

	</dependencies>

	<!--使用spring cloud提供的配置服务器，用来获取项目的配置属性-->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-starter-feign</artifactId>
	            <version>1.4.5.RELEASE</version>
	        </dependency>

	        <dependency>
	            <groupId>com.alibaba</groupId>
	            <artifactId>druid</artifactId>
	            <version>1.0.19</version>
	        </dependency>

	        <dependency>
	            <groupId>org.mybatis.spring.boot</groupId>
	            <artifactId>mybatis-spring-boot-starter</artifactId>
	            <version>1.3.1</version>
	        </dependency>

			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>2.0.3</version>
			</dependency>

			<dependency>
	            <groupId>com.github.pagehelper</groupId>
	            <artifactId>pagehelper-spring-boot-starter</artifactId>
	            <version>1.2.1</version>
        	</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- 
			生成可执行的JAR，此方式适用于单个模块的配置，因为需要为每个模块工程配置mainClass
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-jar-plugin</artifactId>
    			<archive>
    				<manifest>
    					<mainClass></mainClass>
    					<addClasspath>true</addClasspath>
    					<classpathPrefix>lib</classpathPrefix>
    				</manifest>
    			</archive>
    			<configuration>  
                    <outputDirectory>${basedir}/../jar</outputDirectory>  
                </configuration> 
			</plugin> 
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgs>
						<arg>-Xlint:unchecked</arg>
						<arg>-Xlint:deprecation </arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!--mvn构建包时，将test部分剔除-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--
				生成可执行的JAR，此方式适用于多个模块的统一配置。每个模块继承此POM文件的模块都会生成一个可执行的JAR。
				-->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<dependencies>
		                <dependency>
		                	<groupId>org.springframework</groupId>
		                    <artifactId>springloaded</artifactId>
		                    <version>1.2.6.RELEASE</version>
		                </dependency>
		            </dependencies>
	                <configuration>  
	                	<fork>true</fork>  
	                	<outputDirectory>${basedir}/../../jar</outputDirectory>
	            	</configuration>  
				</plugin>

				<!-- TOMCAT 启动插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>1.1</version>
					<configuration>
						<port>8080</port>
						<uriEncoding>UTF-8</uriEncoding>
					</configuration>
				</plugin>


			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.1.222:8282/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.1.222:8282/nexus/content/groups/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>